library - sockjs, stomp

let sock = null;
let stmp = null;
let path = "/api/ws?token=jwt_token_here"

//connect to websocket
function connect() {
    sock = new SockJS(path);
    stmp = StompJs.Stomp.over(sock);
    stmp.activate();
}

// send message to a user
function send(message) {
    stmp.send('/ms/secure/,{header if any}, message)
}

// subscribe to channel
// have to subsribe to /messages/myEmail not any other channel
// let data = message.body
// data has various types
	1) MESSAGE - simple chat between two users
		res = 	{
					String MESSAGE_TYPE = MESSAGE;
					int blockIndex;
					int messageIndex;
					String author;
					String content;
					Date date;
				}
	2) CALL_REQUEST - request for a secure chat
		res = {
			MESSAGE_TYPE = "CALL_REQUEST";
    		long ringEndTime;
		}

	3) CALL_REQUEST_ACCEPT - when a user2 accepts request server sends a message to user1
		As you say i am removing adding user2 info from response
		res {
			MESSAGE_TYPE = "CALL_REQUEST_ACCEPT",
		}
	4) CALL_REQUEST_REJECT - when user2 rejects call server sends this message to user1
		res = {
			MESSAGE_TYPE = "CALL_REQUEST_REJECT"
		}
	5) END_OF_CALL - if user1 ends call then this message is sent to user2
		res = {
			MESSAGE_TYPE = "END_OF_CALL"
		}
function subscribe() {
    stmp.subscribe('/messages/'+myEmail, function (message) {
        if(message.body) {
            console.log(message.body);

        } else {
            console.log(message)
        }
    })
}


// setup backend for testing
1) Install java
2) command to run backend - 
windows - mvnw spring-boot:run
ubuntu - ./mvnw spring-boot:run

3) for database
	1) user = your_name_in_lowercase
	2) pass = will send you